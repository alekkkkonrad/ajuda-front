{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport userService from '../services/userService';\nconst initialState = {\n  user: {},\n  error: false,\n  success: false,\n  loading: false,\n  message: null\n}; //get user details\n\nexport const profile = createAsyncThunk(\"user/profile\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.profile(user, token);\n  return data;\n}); //update profile\n\nexport const updateProfile = createAsyncThunk(\"user/update\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.updateProfile(user, token); //check errors\n\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n\n  return data;\n}); //request password\n\nexport const requestPassword = createAsyncThunk(\"user/recupera\", async email => {\n  const res = await userService.requestPassword(email);\n  return res;\n}); //set password\n\nexport const setNewPassword = createAsyncThunk(\"user/reseta\", async data => {\n  const res = await userService.setNewPassword(data);\n  return res;\n});\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetMessage: state => {\n      state.message = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(profile.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(profile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(updateProfile.pending, (state, action) => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n      state.message = \"Usuário atualizado com sucesso!\";\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.user = {};\n    }).addCase(requestPassword.pending, (state, action) => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(requestPassword.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.message = \"Email enviado\";\n    }).addCase(requestPassword.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  resetMessage\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userService","initialState","user","error","success","loading","message","profile","thunkAPI","token","getState","auth","data","updateProfile","errors","rejectWithValue","requestPassword","email","res","setNewPassword","userSlice","name","reducers","resetMessage","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/Alexandre/OneDrive/Área de Trabalho/PROJETO - TCC/ajuda+/front/src/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport userService from '../services/userService'\r\n\r\nconst initialState = {\r\n    user: {},\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n    message: null\r\n}\r\n\r\n//get user details\r\nexport const profile = createAsyncThunk(\r\n    \"user/profile\",\r\n    async(user, thunkAPI) => {\r\n        const token = thunkAPI.getState().auth.user.token\r\n        const data = await userService.profile(user, token)\r\n\r\n        return data\r\n    }\r\n)\r\n//update profile\r\nexport const updateProfile = createAsyncThunk(\r\n    \"user/update\",\r\n    async(user, thunkAPI) => {\r\n        const token = thunkAPI.getState().auth.user.token\r\n        const data = await userService.updateProfile(user, token)\r\n        //check errors\r\n        if(data.errors){\r\n            return thunkAPI.rejectWithValue(data.errors[0])\r\n        }\r\n        return data\r\n    }\r\n)\r\n//request password\r\nexport const requestPassword = createAsyncThunk(\r\n    \"user/recupera\",\r\n    async(email) => {\r\n        const res = await userService.requestPassword(email)\r\n        return res\r\n    }\r\n)\r\n//set password\r\nexport const setNewPassword = createAsyncThunk(\r\n    \"user/reseta\",\r\n    async(data) => {\r\n        const res = await userService.setNewPassword(data)\r\n        return res\r\n    }\r\n)\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n        resetMessage: (state) => {\r\n            state.message = null\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(profile.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(profile.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = action.payload\r\n            })\r\n            .addCase(updateProfile.pending, (state, action) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(updateProfile.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = action.payload\r\n                state.message = \"Usuário atualizado com sucesso!\"\r\n            })\r\n            .addCase(updateProfile.rejected, (state, action) => {\r\n                state.loading = false\r\n                state.error = action.payload\r\n                state.user = {}\r\n            })\r\n            .addCase(requestPassword.pending, (state, action) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(requestPassword.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.message = \"Email enviado\"\r\n            })\r\n            .addCase(requestPassword.rejected, (state, action) => {\r\n                state.loading = false\r\n                state.error = action.payload\r\n            })\r\n    }\r\n})\r\n\r\nexport const {resetMessage} = userSlice.actions\r\nexport default userSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}