{"ast":null,"code":"import { api } from '../utils/config';\n\nconst requestPassword = async email => {\n  const config = {\n    method: \"POST\",\n    body: email.json()\n  };\n\n  try {\n    const res = await fetch(api + \"/users/request\", config).then(res => res.json()).catch(err => err);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst setPassword = async (email, token, senha) => {\n  const data = {\n    email,\n    token,\n    senha\n  };\n  const config = {\n    method: \"POST\",\n    body: JSON.stringify(data)\n  };\n\n  try {\n    const res = await fetch(api + \"/users/reseta\", config).then(res => res.json()).catch(err => err);\n    return res;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst passwordService = {\n  requestPassword,\n  setPassword\n};\nexport default passwordService;","map":{"version":3,"names":["api","requestPassword","email","config","method","body","json","res","fetch","then","catch","err","error","console","log","setPassword","token","senha","data","JSON","stringify","passwordService"],"sources":["C:/Users/Alexandre/OneDrive/Área de Trabalho/PROJETO - TCC/ajuda+/front/src/services/passwordService.js"],"sourcesContent":["import {api} from '../utils/config'\r\n\r\nconst requestPassword = async(email) => {\r\n    const config = {\r\n        method: \"POST\",\r\n        body: email.json(),\r\n    }\r\n    try{\r\n        const res = await fetch(api + \"/users/request\", config)\r\n            .then((res) => res.json())\r\n            .catch((err) => err)\r\n        return res\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst setPassword = async(email, token, senha) => {\r\n    const data = {\r\n        email,\r\n        token,\r\n        senha\r\n    }\r\n    const config = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n    }\r\n    try{\r\n        const res = await fetch(api + \"/users/reseta\", config)\r\n            .then((res) => res.json())\r\n            .catch((err) => err)\r\n        return res\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst passwordService = {\r\n    requestPassword,\r\n    setPassword\r\n}\r\n\r\nexport default passwordService"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,iBAAlB;;AAEA,MAAMC,eAAe,GAAG,MAAMC,KAAN,IAAgB;EACpC,MAAMC,MAAM,GAAG;IACXC,MAAM,EAAE,MADG;IAEXC,IAAI,EAAEH,KAAK,CAACI,IAAN;EAFK,CAAf;;EAIA,IAAG;IACC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAG,GAAG,gBAAP,EAAyBG,MAAzB,CAAL,CACbM,IADa,CACPF,GAAD,IAASA,GAAG,CAACD,IAAJ,EADD,EAEbI,KAFa,CAENC,GAAD,IAASA,GAFF,CAAlB;IAGA,OAAOJ,GAAP;EACH,CALD,CAKE,OAAMK,KAAN,EAAY;IACVC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAbD;;AAeA,MAAMG,WAAW,GAAG,OAAMb,KAAN,EAAac,KAAb,EAAoBC,KAApB,KAA8B;EAC9C,MAAMC,IAAI,GAAG;IACThB,KADS;IAETc,KAFS;IAGTC;EAHS,CAAb;EAKA,MAAMd,MAAM,GAAG;IACXC,MAAM,EAAE,MADG;IAEXC,IAAI,EAAEc,IAAI,CAACC,SAAL,CAAeF,IAAf;EAFK,CAAf;;EAIA,IAAG;IACC,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAACR,GAAG,GAAG,eAAP,EAAwBG,MAAxB,CAAL,CACbM,IADa,CACPF,GAAD,IAASA,GAAG,CAACD,IAAJ,EADD,EAEbI,KAFa,CAENC,GAAD,IAASA,GAFF,CAAlB;IAGA,OAAOJ,GAAP;EACH,CALD,CAKE,OAAMK,KAAN,EAAY;IACVC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAlBD;;AAoBA,MAAMS,eAAe,GAAG;EACpBpB,eADoB;EAEpBc;AAFoB,CAAxB;AAKA,eAAeM,eAAf"},"metadata":{},"sourceType":"module"}