{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from '../services/authService';\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  error: false,\n  success: false,\n  loading: false\n}; //register an user and sign in\n\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  const data = await authService.register(user); //check for errors\n\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n\n  return data;\n}); //logout an user\n\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n  await authService.logout();\n});\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    reset: state => {\n      state.loading = false;\n      state.error = false;\n      state.success = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","error","success","loading","register","thunkAPI","data","errors","rejectWithValue","logout","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/Alexandre/OneDrive/Área de Trabalho/PROJETO - TCC/ajuda+/front/src/slices/authSlice.js"],"sourcesContent":["import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport authService from '../services/authService'\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\nconst initialState = {\r\n    user: user ? user : null,\r\n    error: false,\r\n    success: false,\r\n    loading: false,\r\n}\r\n\r\n//register an user and sign in\r\nexport const register = createAsyncThunk(\"auth/register\",\r\n    async(user, thunkAPI) => {\r\n        const data = await authService.register(user)\r\n\r\n        //check for errors\r\n        if(data.errors){\r\n            return thunkAPI.rejectWithValue(data.errors[0])\r\n        }\r\n\r\n        return data\r\n\r\n    }\r\n)\r\n\r\n//logout an user\r\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\r\n    await authService.logout()\r\n})\r\n\r\nexport const authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) => {\r\n            state.loading = false\r\n            state.error = false\r\n            state.success = false\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(register.pending, (state) => {\r\n                state.loading = true\r\n                state.error = false\r\n            })\r\n            .addCase(register.fulfilled, (state, action) => {\r\n                state.loading = false\r\n                state.success = true\r\n                state.error = null\r\n                state.user = action.payload\r\n            })\r\n            .addCase(register.rejected, (state, action) => {\r\n                state.loading = false\r\n                state.error = action.payload\r\n                state.user = null\r\n            })\r\n    }\r\n})\r\n\r\nexport const {reset} = authSlice.actions\r\nexport default authSlice.reducer"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,gBAArB,QAA4C,kBAA5C;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;EACjBL,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADH;EAEjBM,KAAK,EAAE,KAFU;EAGjBC,OAAO,EAAE,KAHQ;EAIjBC,OAAO,EAAE;AAJQ,CAArB,C,CAOA;;AACA,OAAO,MAAMC,QAAQ,GAAGX,gBAAgB,CAAC,eAAD,EACpC,OAAME,IAAN,EAAYU,QAAZ,KAAyB;EACrB,MAAMC,IAAI,GAAG,MAAMZ,WAAW,CAACU,QAAZ,CAAqBT,IAArB,CAAnB,CADqB,CAGrB;;EACA,IAAGW,IAAI,CAACC,MAAR,EAAe;IACX,OAAOF,QAAQ,CAACG,eAAT,CAAyBF,IAAI,CAACC,MAAL,CAAY,CAAZ,CAAzB,CAAP;EACH;;EAED,OAAOD,IAAP;AAEH,CAXmC,CAAjC,C,CAcP;;AACA,OAAO,MAAMG,MAAM,GAAGhB,gBAAgB,CAAC,aAAD,EAAgB,YAAY;EAC9D,MAAMC,WAAW,CAACe,MAAZ,EAAN;AACH,CAFqC,CAA/B;AAIP,OAAO,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EACjCmB,IAAI,EAAE,MAD2B;EAEjCX,YAFiC;EAGjCY,QAAQ,EAAE;IACNC,KAAK,EAAGC,KAAD,IAAW;MACdA,KAAK,CAACX,OAAN,GAAgB,KAAhB;MACAW,KAAK,CAACb,KAAN,GAAc,KAAd;MACAa,KAAK,CAACZ,OAAN,GAAgB,KAAhB;IACH;EALK,CAHuB;EAUjCa,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACab,QAAQ,CAACc,OADtB,EACgCJ,KAAD,IAAW;MAClCA,KAAK,CAACX,OAAN,GAAgB,IAAhB;MACAW,KAAK,CAACb,KAAN,GAAc,KAAd;IACH,CAJL,EAKKgB,OALL,CAKab,QAAQ,CAACe,SALtB,EAKiC,CAACL,KAAD,EAAQM,MAAR,KAAmB;MAC5CN,KAAK,CAACX,OAAN,GAAgB,KAAhB;MACAW,KAAK,CAACZ,OAAN,GAAgB,IAAhB;MACAY,KAAK,CAACb,KAAN,GAAc,IAAd;MACAa,KAAK,CAACnB,IAAN,GAAayB,MAAM,CAACC,OAApB;IACH,CAVL,EAWKJ,OAXL,CAWab,QAAQ,CAACkB,QAXtB,EAWgC,CAACR,KAAD,EAAQM,MAAR,KAAmB;MAC3CN,KAAK,CAACX,OAAN,GAAgB,KAAhB;MACAW,KAAK,CAACb,KAAN,GAAcmB,MAAM,CAACC,OAArB;MACAP,KAAK,CAACnB,IAAN,GAAa,IAAb;IACH,CAfL;EAgBH;AA3BgC,CAAD,CAA7B;AA8BP,OAAO,MAAM;EAACkB;AAAD,IAAUH,SAAS,CAACa,OAA1B;AACP,eAAeb,SAAS,CAACc,OAAzB"},"metadata":{},"sourceType":"module"}